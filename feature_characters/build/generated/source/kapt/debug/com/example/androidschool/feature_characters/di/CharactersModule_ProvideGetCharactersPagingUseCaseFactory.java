// Generated by Dagger (https://dagger.dev).
package com.example.androidschool.feature_characters.di;

import com.example.androidschool.feature_characters.domain.CharactersRepository;
import com.example.androidschool.feature_characters.domain.usecase.GetCharactersPagingUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CharactersModule_ProvideGetCharactersPagingUseCaseFactory implements Factory<GetCharactersPagingUseCase> {
  private final CharactersModule module;

  private final Provider<CharactersRepository> repositoryProvider;

  public CharactersModule_ProvideGetCharactersPagingUseCaseFactory(CharactersModule module,
      Provider<CharactersRepository> repositoryProvider) {
    this.module = module;
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public GetCharactersPagingUseCase get() {
    return provideGetCharactersPagingUseCase(module, repositoryProvider.get());
  }

  public static CharactersModule_ProvideGetCharactersPagingUseCaseFactory create(
      CharactersModule module, Provider<CharactersRepository> repositoryProvider) {
    return new CharactersModule_ProvideGetCharactersPagingUseCaseFactory(module, repositoryProvider);
  }

  public static GetCharactersPagingUseCase provideGetCharactersPagingUseCase(
      CharactersModule instance, CharactersRepository repository) {
    return Preconditions.checkNotNullFromProvides(instance.provideGetCharactersPagingUseCase(repository));
  }
}
