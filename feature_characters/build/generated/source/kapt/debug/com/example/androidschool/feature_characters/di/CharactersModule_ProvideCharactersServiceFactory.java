// Generated by Dagger (https://dagger.dev).
package com.example.androidschool.feature_characters.di;

import com.example.androidschool.feature_characters.data.network.CharactersService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CharactersModule_ProvideCharactersServiceFactory implements Factory<CharactersService> {
  private final CharactersModule module;

  private final Provider<Retrofit> retrofitProvider;

  public CharactersModule_ProvideCharactersServiceFactory(CharactersModule module,
      Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public CharactersService get() {
    return provideCharactersService(module, retrofitProvider.get());
  }

  public static CharactersModule_ProvideCharactersServiceFactory create(CharactersModule module,
      Provider<Retrofit> retrofitProvider) {
    return new CharactersModule_ProvideCharactersServiceFactory(module, retrofitProvider);
  }

  public static CharactersService provideCharactersService(CharactersModule instance,
      Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(instance.provideCharactersService(retrofit));
  }
}
